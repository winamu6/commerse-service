services:
  catalog_redis:
    image: redis:7
    command: [ "redis-server", "--requirepass", "${CATALOG_REDIS_PASSWORD}" ]
    ports:
      - "${CATALOG_REDIS_PORT}:6379"
    environment:
      REDIS_PASSWORD: ${CATALOG_REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${CATALOG_REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  catalog_db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${CATALOG_DB_USER}
      POSTGRES_PASSWORD: ${CATALOG_DB_PASS}
      POSTGRES_DB: ${CATALOG_DB_NAME}
    ports:
      - "${CATALOG_DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${CATALOG_DB_USER} -d ${CATALOG_DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  catalog_service:
    build:
      context: .
      dockerfile: ./catalog_service/Dockerfile
    environment:
      DATABASE_HOST: catalog_db
      DATABASE_USER: ${CATALOG_DB_USER}
      DATABASE_PASSWORD: ${CATALOG_DB_PASS}
      DATABASE_NAME: ${CATALOG_DB_NAME}
      DATABASE_PORT: ${CATALOG_DB_PORT}

      REDIS_HOST: catalog_redis
      REDIS_PORT: ${CATALOG_REDIS_PORT}
      REDIS_DB: ${CATALOG_REDIS_DB}
      REDIS_PASSWORD: ${CATALOG_REDIS_PASSWORD}

    ports:
      - "8006:8006"

    depends_on:
      catalog_db:
        condition: service_healthy
      catalog_redis:
        condition: service_healthy

  feedback_redis:
    image: redis:7
    command: [ "redis-server", "--requirepass", "${FEEDBACK_REDIS_PASSWORD}" ]
    ports:
      - "${FEEDBACK_REDIS_PORT}:6379"
    environment:
      REDIS_PASSWORD: ${FEEDBACK_REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${FEEDBACK_REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  feedback_db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${FEEDBACK_DB_USER}
      POSTGRES_PASSWORD: ${FEEDBACK_DB_PASS}
      POSTGRES_DB: ${FEEDBACK_DB_NAME}
    ports:
      - "${FEEDBACK_DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${FEEDBACK_DB_USER} -d ${FEEDBACK_DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  feedback_service:
    build:
      context: .
      dockerfile: ./feedback_service/Dockerfile
    environment:
      DATABASE_HOST: feedback_db
      DATABASE_USER: ${FEEDBACK_DB_USER}
      DATABASE_PASSWORD: ${FEEDBACK_DB_PASS}
      DATABASE_NAME: ${FEEDBACK_DB_NAME}
      DATABASE_PORT: ${FEEDBACK_DB_PORT}

      REDIS_HOST: feedback_redis
      REDIS_PORT: ${FEEDBACK_REDIS_PORT}
      REDIS_DB: ${FEEDBACK_REDIS_DB}
      REDIS_PASSWORD: ${FEEDBACK_REDIS_PASSWORD}
    ports:
      - "8005:8005"

    depends_on:
      feedback_db:
        condition: service_healthy
      feedback_redis:
        condition: service_healthy

  user_redis:
    image: redis:7
    command: [ "redis-server", "--requirepass", "${USER_REDIS_PASSWORD}" ]
    ports:
      - "${USER_REDIS_PORT}:6379"
    environment:
      REDIS_PASSWORD: ${USER_REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${USER_REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  user_db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASS}
      POSTGRES_DB: ${USER_DB_NAME}
    ports:
      - "${USER_DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${USER_DB_USER} -d ${USER_DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  user_service:
    build:
      context: .
      dockerfile: ./user_service/Dockerfile
    environment:
      DATABASE_HOST: user_db
      DATABASE_USER: ${USER_DB_USER}
      DATABASE_PASSWORD: ${USER_DB_PASS}
      DATABASE_NAME: ${USER_DB_NAME}
      DATABASE_PORT: ${USER_DB_PORT}


      REDIS_HOST: user_redis
      REDIS_PORT: ${USER_REDIS_PORT}
      REDIS_DB: ${USER_REDIS_DB}
      REDIS_PASSWORD: ${USER_REDIS_PASSWORD}
    ports:
      - "8001:8001"

    depends_on:
      user_db:
        condition: service_healthy
      user_redis:
        condition: service_healthy


  order_redis:
    image: redis:7
    command: [ "redis-server", "--requirepass", "${ORDER_REDIS_PASSWORD}" ]
    ports:
      - "${ORDER_REDIS_PORT}:6379"
    environment:
      REDIS_PASSWORD: ${ORDER_REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${ORDER_REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  order_db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${ORDER_DB_USER}
      POSTGRES_PASSWORD: ${ORDER_DB_PASS}
      POSTGRES_DB: ${ORDER_DB_NAME}
    ports:
      - "${ORDER_DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${ORDER_DB_USER} -d ${ORDER_DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  order_service:
    build:
      context: .
      dockerfile: ./order_service/Dockerfile
    environment:
      DATABASE_HOST: order_db
      DATABASE_USER: ${ORDER_DB_USER}
      DATABASE_PASSWORD: ${ORDER_DB_PASS}
      DATABASE_NAME: ${ORDER_DB_NAME}
      DATABASE_PORT: ${ORDER_DB_PORT}

      REDIS_HOST: order_redis
      REDIS_PORT: ${ORDER_REDIS_PORT}
      REDIS_DB: ${USER_REDIS_DB}
      REDIS_PASSWORD: ${USER_REDIS_PASSWORD}
    ports:
      - "8003:8003"

    depends_on:
      order_db:
        condition: service_healthy
      order_redis:
        condition: service_healthy

  cart_redis:
    image: redis:7
    command: [ "redis-server", "--requirepass", "${CART_REDIS_PASSWORD}" ]
    ports:
      - "${CART_REDIS_PORT}:6379"
    environment:
      REDIS_PASSWORD: ${CART_REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${CART_REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  cart_service:
    build:
      context: .
      dockerfile: ./cart_service/Dockerfile
    environment:
      REDIS_HOST: cart_redis
      REDIS_PORT: ${CART_REDIS_PORT}
      REDIS_DB: ${CART_REDIS_DB}
      REDIS_PASSWORD: ${CART_REDIS_PASSWORD}
    ports:
      - "8007:8007"
    depends_on:
      cart_redis:
        condition: service_healthy